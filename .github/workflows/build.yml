name: BUILD

on:
  push:
  schedule:
    - cron:  '35 0,12 * * *'
  workflow_dispatch:

jobs:
  buildAUR:
    strategy:
      matrix:
        repos: [osu-lazer, ntfysh, ttf-sarasa-gothic-nerd-fonts, plasma6-wallpapers-wallpaper-engine-git, git-cola, glfw-wayland-minecraft-cursorfix, kwin-effect-rounded-corners-git, networkmanager-dmenu-git, clash-nyanpasu-git, code-translucent, 64gram-desktop, prismlauncher-git]
        include:
          - repos: git-cola
            preinstall-pkgs: "at-spi2-core"

      fail-fast: false
      
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - uses: ./build-aur-action
      with:
        repo-name: ${{ matrix.repos }}
        preinstallPkgs: ${{ matrix.preinstall-pkgs }}
    
    - uses: actions/upload-artifact@v3
      with:
        path: ./*/*.pkg.tar.zst
        name: ${{ matrix.repos }}
        if-no-files-found: error
        
    - uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        tag: "packages"
        artifacts: "./*/*.zst"
        token: ${{ secrets.GITHUB_TOKEN }}

  buildNonAUR:
      strategy:
        matrix:
          PKGBUILDs: [newsflash-git, wezterm-git-noinfo]
      
        fail-fast: false
      
      runs-on: ubuntu-latest
      
      steps:
          - uses: actions/checkout@v3
      
          - name: Build Non-AUR packages
            id: makepkg
            uses: ./build-nonaur-action
            with:
              pkgdir: ${{ matrix.PKGBUILDs }}
              aurDeps: true
      
          - uses: actions/upload-artifact@v3
            with:
              path: ./*/*.pkg.tar.zst
              name: ${{ matrix.PKGBUILDs }}
              if-no-files-found: error
      
          - uses: ncipollo/release-action@v1
            with:
              allowUpdates: true
              tag: "packages"
              artifacts: ${{ steps.makepkg.outputs.pkgfile0 }}
              token: ${{ secrets.GITHUB_TOKEN }}
  
  #TODO 
  uploadToOneDrive:      
    runs-on: ubuntu-latest
    if: always()
    needs: [buildAUR , buildNonAUR]

    steps:
      - uses: actions/checkout@v3
      
      - uses: actions/download-artifact@v3
        id: download
      
      - uses: ./create-db-and-upload-action
        with:
          RCLONE_ONEDRIVE_CLIENT_ID: ${{ secrets.RCLONE_ONEDRIVE_CLIENT_ID }}
          RCLONE_ONEDRIVE_CLIENT_SECRET: ${{ secrets.RCLONE_ONEDRIVE_CLIENT_SECRET }}
          RCLONE_ONEDRIVE_REGION: global
          RCLONE_ONEDRIVE_TOKEN: ${{ secrets.RCLONE_ONEDRIVE_TOKEN }}
          RCLONE_ONEDRIVE_DRIVE_ID: ${{ secrets.RCLONE_ONEDRIVE_DRIVE_ID }}
          RCLONE_ONEFRIVE_TENANT_ID: ${{ secrets.RCLONE_ONEDRIVE_TENANT_ID }}
          RCLONE_ONEDRIVE_DRIVE_TYPE: business
          dest_path: /data/archrepo
          repo_name: gb-cha0s
          gpg-privatekey: ${{ secrets.gpg_private_key }}
          local_path: ${{ steps.download.outputs.download-path }}
